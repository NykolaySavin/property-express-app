{"version":3,"sources":["api.js","constants/routes.js","components/Header/Navigation/index.js","components/Header/index.js","common/api/users/index.js","common/api/users/getAll.js","common/api/users/getById.js","common/api/users/deleteById.js","common/api/users/create.js","common/api/users/updateById.js","components/Loading/index.js","components/Error/index.js","components/Users/UserInfo/index.js","components/Users/UserCard/index.js","components/Users/UserList/index.js","components/Users/hooks/useFetchUsers.js","components/Users/UserForm/index.js","components/Users/UserCreate/index.js","components/Users/hooks/useFetchUserById.js","components/Users/UserEdit/index.js","components/Users/UserShow/index.js","components/Users/index.js","common/api/properties/index.js","common/api/properties/getAll.js","common/api/properties/getById.js","common/api/properties/deleteById.js","common/api/properties/create.js","common/api/properties/updateById.js","common/parsers/parseAddressLong.js","components/Properties/PropertyInfo/index.js","components/Properties/PropertyCard/index.js","components/Properties/PropertyList/index.js","components/Properties/hooks/useFetchProperties.js","components/Form/SelectInput/index.js","components/Properties/PropertyForm/index.js","components/Properties/PropertyCreate/index.js","components/Properties/hooks/useFetchPropertyById.js","components/Properties/PropertyEdit/index.js","components/Properties/PropertyShow/index.js","components/Properties/index.js","components/NotFound/index.js","components/App/index.js","index.js"],"names":["apiDomainUrl","process","REACT_APP_API_DOMAIN","axios","create","withCredentials","baseURL","responseType","PROPERTIES","PROPERTIES_LIST","PROPERTIES_CREATE","PROPERTIES_EDIT","params","propertyId","PROPERTIES_SHOW","USERS","USERS_LIST","USERS_CREATE","USERS_EDIT","userId","USERS_SHOW","withRouter","props","Navbar","collapseOnSelect","expand","sticky","bg","Brand","Toggle","Collapse","Nav","className","Item","Link","as","NavLink","to","ROUTES","Header","getAll","query","api","get","queryString","stringify","arrayFormat","getById","deleteById","delete","data","post","updateById","put","Loading","Spinner","animation","role","Error","error","response","statusCode","Alert","variant","message","user","Container","Row","Col","Object","keys","map","key","UserCard","update","useState","loading","setLoading","setError","handleDelete","a","userApi","id","xs","sm","lg","md","Button","onClick","UserList","users","setUsers","getUsers","then","result","catch","err","useEffect","useFetchUsers","schema","yup","firstName","nullable","lastName","email","required","phone","withFormik","enableReinitialize","mapPropsToValues","values","handleSubmit","onSubmit","validationSchema","handleChange","handleBlur","errors","touched","isValid","setFieldValue","Form","Group","controlId","Label","Control","type","placeholder","value","name","onChange","isInvalid","Feedback","history","push","useFetchUserById","setUser","getUserById","useParams","UserPage","exact","path","component","UserCreate","UserEdit","UserShow","property","address","street","house_number","city","city_district","postcode","country","PropertyCard","propertyApi","PropertyList","properties","setProperties","getProperties","propertiesApi","useFetchProperties","SelectInput","optionName","title","initialValue","fetch","formError","initialData","setData","event","target","item","ownerId","livingArea","positive","buildingArea","yearAltered","yearBuilt","bathroomsTotal","bedroomsTotal","useFetchPropertyById","setProperty","getPropertyById","PropertyPage","PropertyCreate","PropertyEdit","PropertyShow","NotFoundPage","App","fluid","UsersPage","PropertiesPage","ReactDOM","render","document","getElementById"],"mappings":"qOAEaA,EAAeC,mHAAYC,sBAAwB,wBAEjDC,MAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAQ,GAAD,OAAKN,EAAL,OACPO,aAAc,S,4DCPHC,EACL,cADKA,EAEP,gCAEOC,EACL,mBADKA,EAEP,qCAEOC,EACL,qBADKA,EAEP,uCAEOC,EACL,+BADKA,EAEP,SAAAC,GAAM,4BAAmBA,EAAOC,WAA1B,UAECC,EACL,+BADKA,EAEP,SAAAF,GAAM,4BAAmBA,EAAOC,WAA1B,UAECE,EACH,SADGA,EAEL,2BAEKC,EACH,cADGA,EAEL,gCAEKC,EACH,gBADGA,EAEL,kCAEKC,EACH,sBADGA,EAEL,SAAAN,GAAM,uBAAcA,EAAOO,OAArB,UAEDC,EACH,sBADGA,EAEL,SAAAR,GAAM,uBAAcA,EAAOO,OAArB,UCDCE,eAvBI,SAAAC,GACjB,OACE,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,OAAO,SAASC,GAAG,QACtD,kBAACJ,EAAA,EAAOK,MAAR,qBACA,kBAACL,EAAA,EAAOM,OAAR,MACA,kBAACN,EAAA,EAAOO,SAAR,KACE,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,KACE,kBAACF,EAAA,EAAIG,KAAL,CAAUC,GAAIC,IAASC,GAAIC,KAA3B,UAIF,kBAACP,EAAA,EAAIE,KAAL,KACE,kBAACF,EAAA,EAAIG,KAAL,CAAUC,GAAIC,IAASC,GAAIC,KAA3B,qBCpBGC,EAJA,WACb,OAAO,kBAAC,EAAD,O,iCCEM,OAAEC,OCHF,SAAgBC,GAC7B,OAAOC,EAAIC,IAAJ,gBAEHF,EAAK,WACGG,IAAYC,UAAUJ,EAAO,CAAEK,YAAa,aAChD,MDFeC,QEHV,SAAiB5B,EAAQsB,GACtC,OAAOC,EAAIC,IAAJ,iBACKxB,GADL,OAEHsB,EAAK,WACGG,IAAYC,UAAUJ,EAAO,CAAEK,YAAa,aAChD,MFFwBE,WGJnB,SAAoB7B,GAC/B,OAAOuB,EAAIO,OAAJ,iBAAqB9B,KHGcf,OIJ/B,SAAgB8C,GAC7B,OAAOR,EAAIS,KAAJ,SAAmBD,IJG0BE,WKJvC,SAAoBjC,EAAQ+B,GACzC,OAAOR,EAAIW,IAAJ,iBAAkBlC,GAAU+B,K,aCAtB,SAASI,IACtB,OACE,yBAAKtB,UAAU,mBACb,kBAACuB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC/B,0BAAMzB,UAAU,WAAhB,gB,aCJO,SAAS0B,EAAT,GAA2B,IAAVC,EAAS,EAATA,MAC9B,OACEA,GACAA,EAAMC,UACND,EAAMC,SAASV,MACoB,MAAnCS,EAAMC,SAASV,KAAKW,WAEb,kBAACC,EAAA,EAAD,CAAOC,QAAQ,UAAUJ,EAAMC,SAASV,KAAKc,SAE/C,kBAACF,EAAA,EAAD,CAAOC,QAAQ,UAAUJ,EAAMK,S,6BCYzB3C,eApBE,SAAC,GAAc,IAAZ4C,EAAW,EAAXA,KAClB,OACE,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKpC,UAAU,eACZqC,OAAOC,KAAKL,GAAMM,KACjB,SAAAC,GAAG,OACDP,EAAKO,IACH,2BACGA,EADH,MACWP,EAAKO,aCsCjBC,EA3CE,SAAC,GAAsB,IAApBR,EAAmB,EAAnBA,KAAMS,EAAa,EAAbA,OAAa,EACPC,oBAAS,GADF,mBAC9BC,EAD8B,KACrBC,EADqB,OAEXF,mBAAS,MAFE,mBAE9BhB,EAF8B,KAEvBmB,EAFuB,KAGrC,GAAIF,EAAS,OAAO,kBAACtB,EAAD,MACpB,IAAMyB,EAAY,uCAAG,sBAAAC,EAAA,6DACnBH,GAAW,GADQ,kBAGXI,EAAQjC,WAAWiB,EAAKiB,IAHb,sDAKjBJ,EAAS,EAAD,IALS,OAOnBD,GAAW,GACXH,IARmB,yDAAH,qDAUlB,OACE,kBAACR,EAAA,EAAD,CAAWlC,UAAU,sBAClB2B,GAAS,kBAACD,EAAD,CAAOC,MAAOA,IACxB,kBAAC,EAAD,CAAUM,KAAMA,IAChB,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKe,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC9B,kBAAC,IAAD,CAAMjD,GAAIC,EAAqB,CAAEnB,OAAQ8C,EAAKiB,MAC5C,kBAACK,EAAA,EAAD,CAAQvD,UAAU,oBAAlB,UAGJ,kBAACoC,EAAA,EAAD,CAAKe,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC9B,kBAAC,IAAD,CAAMjD,GAAIC,EAAqB,CAAEnB,OAAQ8C,EAAKiB,MAC5C,kBAACK,EAAA,EAAD,CAAQvD,UAAU,oBAAlB,UAGJ,kBAACoC,EAAA,EAAD,CAAKe,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC9B,kBAACC,EAAA,EAAD,CACEvD,UAAU,mBACV+B,QAAQ,SACRyB,QAAST,GAHX,cCHKU,GA3BE,WAAO,IAAD,ECNR,SAAuBhD,GAAQ,IAAD,EACjBkC,mBAAS,IADQ,mBACpCe,EADoC,KAC7BC,EAD6B,OAEbhB,oBAAS,GAFI,mBAEpCC,EAFoC,KAE3BC,EAF2B,OAGjBF,mBAAS,MAHQ,mBAGpChB,EAHoC,KAG7BmB,EAH6B,KAIrCc,EAAW,kBACfX,EACGzC,OAAOC,GACPoD,MAAK,SAAAC,GACJjB,GAAW,GACPiB,EAAO5C,KACTyC,EAASG,EAAO5C,MAEhByC,EAAS,OAGZI,OAAM,SAAAC,GACLlB,EAASkB,GACTnB,GAAW,OAOjB,OALAoB,qBAAU,WACRpB,GAAW,GACXC,EAAS,MACTc,MACC,IACI,CAAEF,QAAOd,UAASjB,QAAOkB,aAAYC,WAAUc,YDjBVM,GAApCR,EADa,EACbA,MAAOd,EADM,EACNA,QAASjB,EADH,EACGA,MAAOiC,EADV,EACUA,SAC/B,GAAIhB,EAAS,OAAO,kBAACtB,EAAD,MACpB,IAAMoB,EAAS,WACbkB,KAEF,OACE,kBAAC1B,EAAA,EAAD,KACGP,GAAS,kBAACD,EAAD,CAAOC,MAAOA,IACxB,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAM/B,GAAIC,KACR,kBAACiD,EAAA,EAAD,CAAQvD,UAAU,oBAAlB,cAIN,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGsB,EAAMnB,KAAI,SAAAN,GAAI,OACb,kBAAC,EAAD,CAAUA,KAAMA,EAAMS,OAAQA,W,8CErBpCyB,GAASC,KAAW,CACxBC,UAAWD,OAAaE,WACxBC,SAAUH,OAAaE,WACvBE,MAAOJ,OAEJI,QACAC,WACHC,MAAON,OAAaE,aA8EPK,gBAAW,CACxBC,oBAAoB,EACpBC,iBAAkB,SAAAC,GAChB,OAAOA,EAAO7C,MAAQ,IAExB8C,aAAc,SAACD,EAAD,GAAuB,EAAZxF,MACjB0F,SAASF,IAEjBG,iBAAkBd,IARLQ,EA3EE,SAAC,GASX,IARLI,EAQI,EARJA,aACAG,EAOI,EAPJA,aAEAJ,GAKI,EANJK,WAMI,EALJL,QAGAM,GAEI,EAJJC,QAII,EAHJC,QAGI,EAFJF,QAEI,EADJG,cAEA,OACE,kBAACC,GAAA,EAAD,CAAMR,SAAUD,GACd,kBAACS,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBACpB,kBAACF,GAAA,EAAKG,MAAN,mBACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,mBACZC,MAAOpF,KAAImE,EAAQ,cAAgB,GACnCkB,KAAK,YACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,eAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,eAGjB,kBAACI,GAAA,EAAKC,MAAN,CAAYC,UAAU,gBACpB,kBAACF,GAAA,EAAKG,MAAN,kBACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,kBACZC,MAAOpF,KAAImE,EAAQ,aAAe,GAClCkB,KAAK,WACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,cAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,cAGjB,kBAACI,GAAA,EAAKC,MAAN,CAAYC,UAAU,aACpB,kBAACF,GAAA,EAAKG,MAAN,cACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,QACLC,YAAY,cACZC,MAAOpF,KAAImE,EAAQ,UAAY,GAC/BkB,KAAK,QACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,WAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,WAGjB,kBAACI,GAAA,EAAKC,MAAN,CAAYC,UAAU,aACpB,kBAACF,GAAA,EAAKG,MAAN,cACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,cACZC,MAAOpF,KAAImE,EAAQ,UAAY,GAC/BkB,KAAK,QACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,WAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,WAGjB,kBAAC7B,EAAA,EAAD,CAAQxB,QAAQ,UAAU8D,KAAK,SAAS7F,UAAU,yBAAlD,oBC9CSX,gBA7BI,SAAC,GAAiB,IAAf+G,EAAc,EAAdA,QAAc,EACJzD,oBAAS,GADL,mBAC3BC,EAD2B,KAClBC,EADkB,OAERF,mBAAS,MAFD,mBAE3BhB,EAF2B,KAEpBmB,EAFoB,KAIlC,GAAIF,EAAS,OAAO,kBAACtB,EAAD,MAEpB,IAAM0D,EAAQ,uCAAG,WAAM9D,GAAN,eAAA8B,EAAA,6DACfH,GAAW,GADI,kBAGgBI,EAAQ7E,OAAO8C,GAH/B,kBAGLA,KACRkF,EAAQC,KAAK/F,KAJA,gDAMbwC,EAAS,EAAD,IANK,QAQfD,GAAW,GARI,yDAAH,sDAWd,OACE,kBAACX,EAAA,EAAD,KACGP,GAAS,kBAACD,EAAD,CAAOC,MAAOA,IACxB,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,CAAU4C,SAAUA,UC7Bf,SAASsB,GAAiBnH,EAAQsB,GAAQ,IAAD,EAC9BkC,mBAAS,IADqB,mBAC/CV,EAD+C,KACzCsE,EADyC,OAExB5D,oBAAS,GAFe,mBAE/CC,EAF+C,KAEtCC,EAFsC,OAG5BF,mBAAS,MAHmB,mBAG/ChB,EAH+C,KAGxCmB,EAHwC,KAIhD0D,EAAc,kBAClBvD,EACGlC,QAAQ5B,EAAQsB,GAChBoD,MAAK,SAAAC,GACJjB,GAAW,GACPiB,EAAO5C,KACTqF,EAAQzC,EAAO5C,MAEfqF,EAAQ,OAGXxC,OAAM,SAAAC,GACLlB,EAASkB,GACTnB,GAAW,OAOjB,OALAoB,qBAAU,WACRpB,GAAW,GACXC,EAAS,MACL3D,GAAQqH,MACX,CAACrH,IACG,CAAE8C,OAAMW,UAASjB,QAAOkB,aAAYC,WAAU0D,eCjBvD,IA6BenH,gBA7BE,SAAC,GAAiB,IAAf+G,EAAc,EAAdA,QACVjH,EAAWsH,cAAXtH,OADwB,EAEuBmH,GACrDnH,GADM8C,EAFwB,EAExBA,KAAMW,EAFkB,EAElBA,QAASjB,EAFS,EAETA,MAAOkB,EAFE,EAEFA,WAAYC,EAFV,EAEUA,SAG1C,GAAIF,EAAS,OAAO,kBAACtB,EAAD,MAEpB,IAAM0D,EAAQ,uCAAG,WAAM9D,GAAN,eAAA8B,EAAA,6DACfH,GAAW,GADI,kBAGgBI,EAAQ7B,WAAWjC,EAAQ+B,GAH3C,kBAGLA,KACRkF,EAAQC,KAAK/F,KAJA,gDAMbwC,EAAS,EAAD,IANK,QAQfD,GAAW,GARI,yDAAH,sDAUd,OACE,kBAACX,EAAA,EAAD,KACGP,GAAS,kBAACD,EAAD,CAAOC,MAAOA,IACxB,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,CAAUH,KAAMA,EAAM+C,SAAUA,UCQ3B3F,gBA9BE,SAAC,GAAgB,EAAd+G,QAAe,IACzBjH,EAAWsH,cAAXtH,OADwB,EAECmH,GAAiBnH,GAA1C8C,EAFwB,EAExBA,KAAMW,EAFkB,EAElBA,QAASjB,EAFS,EAETA,MAEvB,OAAIiB,EAAgB,kBAACtB,EAAD,MAElB,kBAACY,EAAA,EAAD,KACGP,GAAS,kBAACD,EAAD,CAAOC,MAAOA,IACxB,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKpC,UAAU,eACb,kDAGJ,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACG,IACD,kBAAC,IAAD,CAAM/B,GAAIC,EAAqB,CAAEnB,YAC/B,kBAACoE,EAAA,EAAD,CAAQvD,UAAU,oBAAlB,WAIN,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAUH,KAAMA,UCXXyE,GAZE,kBACf,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAMtG,EAAmBuG,UAAWpD,KACjD,kBAAC,IAAD,CAAOmD,KAAMtG,EAAwBuG,UAAWpD,KAChD,kBAAC,IAAD,CAAOmD,KAAMtG,EAA0BuG,UAAWC,KAClD,kBAAC,IAAD,CAAOF,KAAMtG,EAAwBuG,UAAWE,KAChD,kBAAC,IAAD,CAAOH,KAAMtG,EAAwBuG,UAAWG,QCXvC,QAAExG,OCHF,SAAgBC,GAC7B,OAAOC,EAAIC,IAAJ,qBAEHF,EAAK,WACGG,IAAYC,UAAUJ,EAAO,CAAEK,YAAa,aAChD,MDFeC,QEHV,SAAiBlC,EAAY4B,GAC1C,OAAOC,EAAIC,IAAJ,sBACU9B,GADV,OAEH4B,EAAK,WACGG,IAAYC,UAAUJ,EAAO,CAAEK,YAAa,aAChD,MFFwBE,WGJnB,SAAoBnC,GAC/B,OAAO6B,EAAIO,OAAJ,sBAA0BpC,KHGST,OIJ/B,SAAgB8C,GAC7B,OAAOR,EAAIS,KAAJ,cAAwBD,IJGqBE,WKJvC,SAAoBvC,EAAYqC,GAC7C,OAAOR,EAAIW,IAAJ,sBAAuBxC,GAAcqC,KCH/B,IC6BA7B,gBAxBM,SAAC,GAAkB,IAAhB4H,EAAe,EAAfA,SACtB,OACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKpC,UAAU,eACZqC,OAAOC,KAAK2E,GAAU1E,KAAI,SAAAC,GACzB,MAAY,YAARA,EACK,4BDZG0E,ECYkBD,EAASzE,KDXlC0E,EAAQC,QAAUD,EAAQE,cAAgBF,EAAQG,KACzD,GAAN,OAAUH,EAAQC,OAAlB,YAA4BD,EAAQE,aAApC,aAAqDF,EAAQG,KAA7D,YACEH,EAAQI,cADV,YAEIJ,EAAQK,SAFZ,YAEwBL,EAAQM,SAC3B,ICUOP,EAASzE,IACP,2BACGA,EADH,MACWyE,EAASzE,IDjBvB,IAAS0E,WEoDTO,GA3CM,SAAC,GAA0B,IAAxBR,EAAuB,EAAvBA,SAAUvE,EAAa,EAAbA,OAAa,EACfC,oBAAS,GADM,mBACtCC,EADsC,KAC7BC,EAD6B,OAEnBF,mBAAS,MAFU,mBAEtChB,EAFsC,KAE/BmB,EAF+B,KAG7C,GAAIF,EAAS,OAAO,kBAACtB,EAAD,MACpB,IAAMyB,EAAY,uCAAG,sBAAAC,EAAA,6DACnBH,GAAW,GADQ,kBAGX6E,GAAY1G,WAAWiG,EAAS/D,IAHrB,sDAKjBJ,EAAS,EAAD,IALS,OAOnBD,GAAW,GACXH,IARmB,yDAAH,qDAUlB,OACE,kBAACR,EAAA,EAAD,CAAWlC,UAAU,sBAClB2B,GAAS,kBAACD,EAAD,CAAOC,MAAOA,IACxB,kBAAC,GAAD,CAAcsF,SAAUA,IACxB,kBAAC9E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKe,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC9B,kBAAC,IAAD,CAAMjD,GAAIC,EAA0B,CAAEzB,WAAYoI,EAAS/D,MACzD,kBAACK,EAAA,EAAD,CAAQvD,UAAU,oBAAlB,UAGJ,kBAACoC,EAAA,EAAD,CAAKe,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC9B,kBAAC,IAAD,CAAMjD,GAAIC,EAA0B,CAAEzB,WAAYoI,EAAS/D,MACzD,kBAACK,EAAA,EAAD,CAAQvD,UAAU,oBAAlB,UAGJ,kBAACoC,EAAA,EAAD,CAAKe,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC9B,kBAACC,EAAA,EAAD,CACEvD,UAAU,mBACV+B,QAAQ,SACRyB,QAAST,GAHX,cCHK4E,GA3BM,WAAO,IAAD,ECNZ,SAA4BlH,GAAQ,IAAD,EACZkC,mBAAS,IADG,mBACzCiF,EADyC,KAC7BC,EAD6B,OAElBlF,oBAAS,GAFS,mBAEzCC,EAFyC,KAEhCC,EAFgC,OAGtBF,mBAAS,MAHa,mBAGzChB,EAHyC,KAGlCmB,EAHkC,KAI1CgF,EAAgB,kBACpBC,GACGvH,OAAOC,GACPoD,MAAK,SAAAC,GACJjB,GAAW,GACPiB,EAAO5C,KACT2G,EAAc/D,EAAO5C,MAErB2G,EAAc,OAGjB9D,OAAM,SAAAC,GACLlB,EAASkB,GACTnB,GAAW,OAOjB,OALAoB,qBAAU,WACRpB,GAAW,GACXC,EAAS,MACTgF,MACC,IACI,CAAEF,aAAYhF,UAASjB,QAAOkB,aAAYC,WAAUgF,iBDjBLE,GAA9CJ,EADiB,EACjBA,WAAYhF,EADK,EACLA,QAASjB,EADJ,EACIA,MAAOmG,EADX,EACWA,cACpC,GAAIlF,EAAS,OAAO,kBAACtB,EAAD,MACpB,IAAMoB,EAAS,WACboF,KAEF,OACE,kBAAC5F,EAAA,EAAD,KACGP,GAAS,kBAACD,EAAD,CAAOC,MAAOA,IACxB,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAM/B,GAAIC,KACR,kBAACiD,EAAA,EAAD,CAAQvD,UAAU,oBAAlB,cAIN,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGwF,EAAWrF,KAAI,SAAA0E,GAAQ,OACtB,kBAAC,GAAD,CAAcA,SAAUA,EAAUvE,OAAQA,WE6CvCuF,I,OApEK,SAAC,GASd,IARLC,EAQI,EARJA,WACAjC,EAOI,EAPJA,SACAD,EAMI,EANJA,KACAmC,EAKI,EALJA,MAKI,IAJJC,oBAII,MAJW,GAIX,EAHJC,EAGI,EAHJA,MACAC,EAEI,EAFJA,UAEI,IADJC,mBACI,MADU,GACV,IACoB5F,mBAAS4F,GAD7B,mBACGrH,EADH,KACSsH,EADT,OAE0B7F,oBAAS,GAFnC,mBAEGC,EAFH,KAEYC,EAFZ,OAGsBF,mBAAS,MAH/B,mBAGGhB,EAHH,KAGUmB,EAHV,KA0BJ,GARAmB,qBAAU,WACJoE,IACFxF,GAAW,GACXC,EAAS,MAhBXuF,IACGxE,MAAK,SAAAC,GACJjB,GAAW,GACPiB,EAAO5C,KACTsH,EAAQ1E,EAAO5C,MAEfsH,EAAQ,OAGXzE,OAAM,SAAAC,GACLlB,EAASkB,GACTnB,GAAW,SAQd,IAEClB,EAAO,OAAO,6BAAMA,EAAMK,SAC9B,GAAIY,EAAS,OAAO,kBAACtB,EAAD,MAUpB,OACE,kBAACkE,GAAA,EAAKC,MAAN,CAAYC,UAAWM,GACrB,kBAACR,GAAA,EAAKG,MAAN,KAAawC,GACb,kBAAC3C,GAAA,EAAKI,QAAN,CACEI,KAAMA,EACN7F,GAAG,SACH4F,MAAOqC,EACPnC,SAfS,SAAAwC,GAAU,IACfC,EAAWD,EAAXC,OACA1C,EAAgB0C,EAAhB1C,KAAMD,EAAU2C,EAAV3C,MACVE,GACFA,EAASD,EAAMD,IAYbG,YAAaoC,GAEb,6CACCpH,EAAKqB,KAAI,SAAAoG,GAAI,OACZ,4BAAQnG,IAAKmG,EAAKzF,GAAI6C,MAAO4C,EAAKzF,IAC/ByF,EAAKT,QAIZ,kBAAC1C,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WAAWyC,MC3DvCnE,GAASC,KAAW,CACxBwE,QAASxE,OAAaK,WACtBoE,WAAYzE,OAET0E,WACAxE,WACHyE,aAAc3E,OAEX0E,WACAxE,WACH0E,YAAa5E,OAEV0E,WACAxE,WACH2E,UAAW7E,OAER0E,WACAxE,WACH4E,eAAgB9E,OAEb0E,WACAxE,WACH6E,cAAe/E,OAEZ0E,WACAxE,WACH4C,QAAS9C,KACC,CACN+C,OAAQ/C,OAAaK,WACrB4C,KAAMjD,OAAaK,WACnB6C,cAAelD,OAAaK,WAC5B+C,QAASpD,OAAaK,WACtB2C,aAAchD,OAAaK,WAC3B8C,SAAUnD,OAAaK,aAExBA,aA6MUE,gBAAW,CACxBC,oBAAoB,EACpBC,iBAAkB,SAAAC,GAChB,OAAOA,EAAOmC,UAAY,IAE5BlC,aAAc,SAACD,EAAD,GAAuB,EAAZxF,MACjB0F,SAASF,IAEjBG,iBAAkBd,IARLQ,EA1MM,SAAC,GASf,IARLI,EAQI,EARJA,aACAG,EAOI,EAPJA,aAEAJ,GAKI,EANJK,WAMI,EALJL,QAGAM,GAEI,EAJJC,QAII,EAHJC,QAGI,EAFJF,QACAG,EACI,EADJA,cAEA,OACE,kBAACC,GAAA,EAAD,CAAMR,SAAUD,GACd,kBAACS,GAAA,EAAKC,MAAN,CAAYC,UAAU,cACpB,kBAACF,GAAA,EAAKG,MAAN,eACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,SACZC,MAAOpF,KAAImE,EAAQ,mBAAqB,GACxCkB,KAAK,iBACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,oBAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,oBAGjB,kBAACjD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACoD,GAAA,EAAKC,MAAN,CAAYC,UAAU,mBACpB,kBAACF,GAAA,EAAKG,MAAN,qBACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,eACZC,MAAOpF,KAAImE,EAAQ,yBAA2B,GAC9CkB,KAAK,uBACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,0BAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,2BAInB,kBAAChD,EAAA,EAAD,KACE,kBAACoD,GAAA,EAAKC,MAAN,CAAYC,UAAU,gBACpB,kBAACF,GAAA,EAAKG,MAAN,iBACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,WACZC,MAAOpF,KAAImE,EAAQ,qBAAuB,GAC1CkB,KAAK,mBACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,sBAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,wBAKrB,kBAACI,GAAA,EAAKC,MAAN,CAAYC,UAAU,oBACpB,kBAACF,GAAA,EAAKG,MAAN,sBACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,gBACZC,MAAOpF,KAAImE,EAAQ,0BAA4B,GAC/CkB,KAAK,wBACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,2BAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,2BAGjB,kBAACI,GAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,GAAA,EAAKG,MAAN,aACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,OACZC,MAAOpF,KAAImE,EAAQ,iBAAmB,GACtCkB,KAAK,eACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,kBAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,kBAGjB,kBAACI,GAAA,EAAKC,MAAN,CAAYC,UAAU,eACpB,kBAACF,GAAA,EAAKG,MAAN,gBACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,UACZC,MAAOpF,KAAImE,EAAQ,oBAAsB,GACzCkB,KAAK,kBACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,qBAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,qBAGjB,kBAACI,GAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB,kBAACF,GAAA,EAAKG,MAAN,oBACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,SACLC,YAAY,cACZC,MAAOpF,KAAImE,EAAQ,eAAiB,GACpCkB,KAAK,aACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,gBAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,gBAGjB,kBAACI,GAAA,EAAKC,MAAN,CAAYC,UAAU,oBACpB,kBAACF,GAAA,EAAKG,MAAN,sBACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,SACLC,YAAY,gBACZC,MAAOpF,KAAImE,EAAQ,iBAAmB,GACtCkB,KAAK,eACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,kBAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,kBAGjB,kBAACI,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBACpB,kBAACF,GAAA,EAAKG,MAAN,mBACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,SACLC,YAAY,aACZC,MAAOpF,KAAImE,EAAQ,cAAgB,GACnCkB,KAAK,YACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,eAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,eAGjB,kBAACI,GAAA,EAAKC,MAAN,CAAYC,UAAU,mBACpB,kBAACF,GAAA,EAAKG,MAAN,qBACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,SACLC,YAAY,eACZC,MAAOpF,KAAImE,EAAQ,gBAAkB,GACrCkB,KAAK,cACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,iBAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,iBAGjB,kBAACI,GAAA,EAAKC,MAAN,CAAYC,UAAU,sBACpB,kBAACF,GAAA,EAAKG,MAAN,4BACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,SACLC,YAAY,sBACZC,MAAOpF,KAAImE,EAAQ,mBAAqB,GACxCkB,KAAK,iBACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,oBAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,oBAGjB,kBAACI,GAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpB,kBAACF,GAAA,EAAKG,MAAN,2BACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,KAAK,SACLC,YAAY,qBACZC,MAAOpF,KAAImE,EAAQ,kBAAoB,GACvCkB,KAAK,gBACLC,SAAUf,EACVgB,YAAavF,KAAIyE,EAAQ,mBAE3B,kBAACI,GAAA,EAAKI,QAAQO,SAAd,CAAuBN,KAAK,WACzBlF,KAAIyE,EAAQ,mBAGjB,kBAAC,GAAD,CACE8C,WAAY,QACZG,MAAOpF,EAAQzC,OACf8H,UAAW3H,KAAIyE,EAAQ,WACvBY,KAAI,UACJC,SAAUV,EACV6C,aAAczH,KAAImE,EAAD,YAAuB,GACxCqD,MAAM,UAER,kBAAC5E,EAAA,EAAD,CAAQxB,QAAQ,UAAU8D,KAAK,SAAS7F,UAAU,yBAAlD,oBC3MSX,gBA7BQ,SAAC,GAAiB,IAAf+G,EAAc,EAAdA,QAAc,EACRzD,oBAAS,GADD,mBAC/BC,EAD+B,KACtBC,EADsB,OAEZF,mBAAS,MAFG,mBAE/BhB,EAF+B,KAExBmB,EAFwB,KAItC,GAAIF,EAAS,OAAO,kBAACtB,EAAD,MAEpB,IAAM0D,EAAQ,uCAAG,WAAM9D,GAAN,eAAA8B,EAAA,6DACfH,GAAW,GADI,kBAGoB6E,GAAYtJ,OAAO8C,GAHvC,kBAGLA,KACRkF,EAAQC,KAAK/F,KAJA,gDAMbwC,EAAS,EAAD,IANK,QAQfD,GAAW,GARI,yDAAH,sDAWd,OACE,kBAACX,EAAA,EAAD,KACGP,GAAS,kBAACD,EAAD,CAAOC,MAAOA,IACxB,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,CAAc4C,SAAUA,UC7BnB,SAASoE,GAAqBvK,EAAY4B,GAAQ,IAAD,EAC9BkC,mBAAS,IADqB,mBACvDsE,EADuD,KAC7CoC,EAD6C,OAEhC1G,oBAAS,GAFuB,mBAEvDC,EAFuD,KAE9CC,EAF8C,OAGpCF,mBAAS,MAH2B,mBAGvDhB,EAHuD,KAGhDmB,EAHgD,KAIxDwG,EAAkB,kBACtB5B,GACG3G,QAAQlC,EAAY4B,GACpBoD,MAAK,SAAAC,GACJjB,GAAW,GACPiB,EAAO5C,KACTmI,EAAYvF,EAAO5C,MAEnBmI,EAAY,OAGftF,OAAM,SAAAC,GACLlB,EAASkB,GACTnB,GAAW,OAOjB,OALAoB,qBAAU,WACRpB,GAAW,GACXC,EAAS,MACLjE,GAAYyK,MACf,CAACzK,IACG,CAAEoI,WAAUrE,UAASjB,QAAOkB,aAAYC,WAAUwG,mBCjB3D,IAkCejK,gBAlCM,SAAC,GAAiB,IAAf+G,EAAc,EAAdA,QACdvH,EAAe4H,cAAf5H,WAD4B,EAQhCuK,GAAqBvK,GALvBoI,EAHkC,EAGlCA,SACArE,EAJkC,EAIlCA,QACAjB,EALkC,EAKlCA,MACAkB,EANkC,EAMlCA,WACAC,EAPkC,EAOlCA,SAEF,GAAIF,EAAS,OAAO,kBAACtB,EAAD,MAEpB,IAAM0D,EAAQ,uCAAG,WAAM9D,GAAN,eAAA8B,EAAA,6DACfH,GAAW,GADI,kBAGoB6E,GAAYtG,WAAWvC,EAAYqC,GAHvD,kBAGLA,KACRkF,EAAQC,KAAK/F,KAJA,gDAMbwC,EAAS,EAAD,IANK,QAQfD,GAAW,GARI,yDAAH,sDAWd,OACE,kBAACX,EAAA,EAAD,KACGP,GAAS,kBAACD,EAAD,CAAOC,MAAOA,IACxB,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,CAAc6E,SAAUA,EAAUjC,SAAUA,UCGvC3F,gBA9BM,SAAC,GAAgB,EAAd+G,QAAe,IAC7BvH,EAAe4H,cAAf5H,WAD4B,EAECuK,GAAqBvK,GAAlDoI,EAF4B,EAE5BA,SAAUrE,EAFkB,EAElBA,QAASjB,EAFS,EAETA,MAE3B,OAAIiB,EAAgB,kBAACtB,EAAD,MAElB,kBAACY,EAAA,EAAD,KACGP,GAAS,kBAACD,EAAD,CAAOC,MAAOA,IACxB,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKpC,UAAU,eACb,sDAGJ,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACG,IACD,kBAAC,IAAD,CAAM/B,GAAIC,EAA0B,CAAEzB,gBACpC,kBAAC0E,EAAA,EAAD,CAAQvD,UAAU,oBAAlB,WAIN,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,CAAc6E,SAAUA,UCXnBsC,GAZM,kBACnB,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO5C,OAAK,EAACC,KAAMtG,EAAwBuG,UAAWc,KACtD,kBAAC,IAAD,CAAOf,KAAMtG,EAA6BuG,UAAWc,KACrD,kBAAC,IAAD,CAAOf,KAAMtG,EAA+BuG,UAAW2C,KACvD,kBAAC,IAAD,CAAO5C,KAAMtG,EAA6BuG,UAAW4C,KACrD,kBAAC,IAAD,CAAO7C,KAAMtG,EAA6BuG,UAAW6C,QCT5CC,GANM,kBACnB,gDCwCaC,GA1BH,kBACV,kBAAC,IAAD,KACG,IACD,kBAAC,IAAD,CAAO/C,UAAWtG,IAClB,kBAAC2B,EAAA,EAAD,CAAW2H,OAAO,GAChB,kBAAC1H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACG,IACD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwE,KAAM,IAAKC,UAAWiD,GAAWnD,OAAK,IAC7C,kBAAC,IAAD,CACEC,KAAMtG,EACNuG,UAAWiD,KAEb,kBAAC,IAAD,CACElD,KAAMtG,EACNuG,UAAWkD,KAEb,kBAAC,IAAD,CAAOlD,UAAW8C,WC3B9BK,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.925a8ebb.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const apiDomainUrl = process.env.REACT_APP_API_DOMAIN || 'http://localhost:8000';\r\n\r\nexport default axios.create({\r\n  withCredentials: true,\r\n  baseURL: `${apiDomainUrl}/v1`,\r\n  responseType: 'json',\r\n});\r\n","export const PROPERTIES = {\r\n  href: \"/properties\",\r\n  as: () => `/properties`\r\n};\r\nexport const PROPERTIES_LIST = {\r\n  href: \"/properties/list\",\r\n  as: () => `/properties/list`\r\n};\r\nexport const PROPERTIES_CREATE = {\r\n  href: \"/properties/create\",\r\n  as: () => `/properties/create`\r\n};\r\nexport const PROPERTIES_EDIT = {\r\n  href: \"/properties/:propertyId/edit\",\r\n  as: params => `/properties/${params.propertyId}/edit`\r\n};\r\nexport const PROPERTIES_SHOW = {\r\n  href: \"/properties/:propertyId/show\",\r\n  as: params => `/properties/${params.propertyId}/show`\r\n};\r\nexport const USERS = {\r\n    href: \"/users\",\r\n    as: () => `/users`\r\n};\r\nexport const USERS_LIST = {\r\n    href: \"/users/list\",\r\n    as: () => `/users/list`\r\n};\r\nexport const USERS_CREATE = {\r\n    href: \"/users/create\",\r\n    as: () => `/users/create`\r\n};\r\nexport const USERS_EDIT = {\r\n    href: \"/users/:userId/edit\",\r\n    as: params => `/users/${params.userId}/edit`\r\n};\r\nexport const USERS_SHOW = {\r\n    href: \"/users/:userId/show\",\r\n    as: params => `/users/${params.userId}/show`\r\n};","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n  Form,\r\n  Dropdown,\r\n  NavItem\r\n} from \"react-bootstrap\";\r\n\r\nimport * as ROUTES from \"../../../constants/routes\";\r\n\r\nconst Navigation = props => {\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" sticky=\"bottom\" bg=\"dark\">\r\n      <Navbar.Brand>Property app</Navbar.Brand>\r\n      <Navbar.Toggle />\r\n      <Navbar.Collapse>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Item>\r\n            <Nav.Link as={NavLink} to={ROUTES.USERS.as()}>\r\n              Users\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link as={NavLink} to={ROUTES.PROPERTIES.as()}>\r\n              Properties\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navigation);\r\n","import React from \"react\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst Header = () => {\r\n  return <Navigation />;\r\n};\r\n\r\nexport default Header;\r\n","import getById from \"./getById\";\r\nimport getAll from \"./getAll\";\r\nimport deleteById from \"./deleteById\";\r\nimport create from \"./create\";\r\nimport updateById from \"./updateById\";\r\n\r\nexport default { getAll, getById, deleteById, create, updateById };\r\n","import queryString from \"query-string\";\r\nimport api from \"../../../api\";\r\n\r\nexport default function getAll(query) {\r\n  return api.get(\r\n    `/users${\r\n      query\r\n        ? `?${queryString.stringify(query, { arrayFormat: \"bracket\" })}`\r\n        : \"\"\r\n    }`\r\n  );\r\n}\r\n","import queryString from \"query-string\";\r\nimport api from \"../../../api\";\r\n\r\nexport default function getById(userId, query) {\r\n  return api.get(\r\n    `/users/${userId}${\r\n      query\r\n        ? `?${queryString.stringify(query, { arrayFormat: \"bracket\" })}`\r\n        : \"\"\r\n    }`\r\n  );\r\n}\r\n","import api from \"../../../api\";\r\n\r\nexport default function deleteById(userId) {\r\n    return api.delete(`/users/${userId}`);\r\n}\r\n","import api from \"../../../api\";\r\n\r\nexport default function create(data) {\r\n  return api.post(`/users`, data);\r\n}\r\n","import api from \"../../../api\";\r\n\r\nexport default function updateById(userId, data) {\r\n  return api.put(`/users/${userId}`, data);\r\n}\r\n","import React from 'react';\r\nimport { Spinner} from 'react-bootstrap';\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div className=\"text-center m-4\">\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nexport default function Error({ error }) {\r\n  if (\r\n    error &&\r\n    error.response &&\r\n    error.response.data &&\r\n    error.response.data.statusCode === 400\r\n  ) {\r\n    return <Alert variant=\"danger\">{error.response.data.message}</Alert>;\r\n  }\r\n  return <Alert variant=\"danger\">{error.message}</Alert>;\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { withRouter, useParams } from \"react-router-dom\";\r\n\r\nconst UserInfo = ({ user }) => {\r\n  return (\r\n    <Container>\r\n\r\n      <Row>\r\n        <Col className=\"text-center\">\r\n          {Object.keys(user).map(\r\n            key =>\r\n              user[key] && (\r\n                <p>\r\n                  {key} : {user[key]}\r\n                </p>\r\n              )\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserInfo);\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport UserInfo from \"../UserInfo\";\r\nimport Loading from \"../../Loading\";\r\nimport userApi from \"../../../common/api/users\";\r\nimport * as ROUTES from \"../../../constants/routes\";\r\nimport Error from \"../../Error\";\r\n\r\nconst UserCard = ({ user, update }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  if (loading) return <Loading />;\r\n  const handleDelete = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await userApi.deleteById(user.id);\r\n    } catch (e) {\r\n      setError(e);\r\n    }\r\n    setLoading(false);\r\n    update();\r\n  };\r\n  return (\r\n    <Container className='border-dark border'>\r\n      {error && <Error error={error} />}\r\n      <UserInfo user={user} />\r\n      <Row>\r\n        <Col xs={12} sm={12} lg={4} md={4}>\r\n          <Link to={ROUTES.USERS_EDIT.as({ userId: user.id })}>\r\n            <Button className=\"btn-focal btn-lg\">Edit</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={12} sm={12} lg={4} md={4}>\r\n          <Link to={ROUTES.USERS_SHOW.as({ userId: user.id })}>\r\n            <Button className=\"btn-focal btn-lg\">Show</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={12} sm={12} lg={4} md={4}>\r\n          <Button\r\n            className=\"btn-focal btn-lg\"\r\n            variant=\"danger\"\r\n            onClick={handleDelete}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport useFetchUsers from \"../hooks/useFetchUsers\";\r\nimport Loading from \"../../Loading\";\r\nimport * as ROUTES from \"../../../constants/routes\";\r\nimport Error from \"../../Error\";\r\nimport UserCard from \"../UserCard\";\r\n\r\nconst UserList = () => {\r\n  const { users, loading, error, getUsers } = useFetchUsers();\r\n  if (loading) return <Loading />;\r\n  const update = () => {\r\n    getUsers();\r\n  };\r\n  return (\r\n    <Container>\r\n      {error && <Error error={error} />}\r\n      <Row>\r\n        <Col>\r\n          <Link to={ROUTES.USERS_CREATE.as()}>\r\n            <Button className=\"btn-focal btn-lg\">Add new</Button>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {users.map(user => (\r\n            <UserCard user={user} update={update} />\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport userApi from \"../../../common/api/users\";\r\n\r\nexport default function useFetchUsers(query) {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const getUsers = () =>\r\n    userApi\r\n      .getAll(query)\r\n      .then(result => {\r\n        setLoading(false);\r\n        if (result.data) {\r\n          setUsers(result.data);\r\n        } else {\r\n          setUsers([]);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setError(err);\r\n        setLoading(false);\r\n      });\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    getUsers();\r\n  }, []);\r\n  return { users, loading, error, setLoading, setError, getUsers };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { withFormik, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport get from \"lodash/get\";\r\n\r\nconst schema = yup.object({\r\n  firstName: yup.string().nullable(),\r\n  lastName: yup.string().nullable(),\r\n  email: yup\r\n    .string()\r\n    .email()\r\n    .required(),\r\n  phone: yup.string().nullable()\r\n});\r\n\r\nconst UserForm = ({\r\n  handleSubmit,\r\n  handleChange,\r\n  handleBlur,\r\n  values,\r\n  touched,\r\n  isValid,\r\n  errors,\r\n  setFieldValue\r\n}) => {\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"formFirstName\">\r\n        <Form.Label>First name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter first name\"\r\n          value={get(values, \"firstName\") || \"\"}\r\n          name=\"firstName\"\r\n          onChange={handleChange}\r\n          isInvalid={!!get(errors, \"firstName\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {get(errors, \"firstName\")}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formLastName\">\r\n        <Form.Label>Last name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter last name\"\r\n          value={get(values, \"lastName\") || \"\"}\r\n          name=\"lastName\"\r\n          onChange={handleChange}\r\n          isInvalid={!!get(errors, \"lastName\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {get(errors, \"lastName\")}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formEmail\">\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          value={get(values, \"email\") || \"\"}\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n          isInvalid={!!get(errors, \"email\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {get(errors, \"email\")}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formPhone\">\r\n        <Form.Label>Phone</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter phone\"\r\n          value={get(values, \"phone\") || \"\"}\r\n          name=\"phone\"\r\n          onChange={handleChange}\r\n          isInvalid={!!get(errors, \"phone\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {get(errors, \"phone\")}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\" className=\"mt-3 btn-focal btn-lg\">\r\n        Save Changes\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default withFormik({\r\n  enableReinitialize: true,\r\n  mapPropsToValues: values => {\r\n    return values.user || {};\r\n  },\r\n  handleSubmit: (values, { props }) => {\r\n    props.onSubmit(values);\r\n  },\r\n  validationSchema: schema\r\n})(UserForm);\r\n","import React, { useState } from \"react\";\r\nimport { withRouter, useParams } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport Loading from \"../../Loading/index\";\r\nimport * as ROUTES from \"../../../constants/routes\";\r\nimport UserForm from \"../UserForm\";\r\nimport userApi from \"../../../common/api/users\";\r\nimport Error from \"../../Error\";\r\n\r\nconst UserCreate = ({ history }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  const onSubmit = async data => {\r\n    setLoading(true);\r\n    try {\r\n      const { data: user } = await userApi.create(data);\r\n      history.push(ROUTES.USERS_LIST.as());\r\n    } catch (e) {\r\n      setError(e);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {error && <Error error={error} />}\r\n      <Row>\r\n        <Col>\r\n          <UserForm onSubmit={onSubmit} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserCreate);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport userApi from \"../../../common/api/users\";\r\n\r\nexport default function useFetchUserById(userId, query) {\r\n  const [user, setUser] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const getUserById = () =>\r\n    userApi\r\n      .getById(userId, query)\r\n      .then(result => {\r\n        setLoading(false);\r\n        if (result.data) {\r\n          setUser(result.data);\r\n        } else {\r\n          setUser({});\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setError(err);\r\n        setLoading(false);\r\n      });\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    if (userId) getUserById();\r\n  }, [userId]);\r\n  return { user, loading, error, setLoading, setError, getUserById };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Alert } from \"react-bootstrap\";\r\nimport { withRouter, useParams } from \"react-router-dom\";\r\nimport Loading from \"../../Loading/index\";\r\nimport * as ROUTES from \"../../../constants/routes\";\r\nimport UserForm from \"../UserForm\";\r\nimport useFetchUserById from \"../hooks/useFetchUserById\";\r\nimport userApi from \"../../../common/api/users\";\r\nimport Error from \"../../Error\";\r\n\r\nconst UserEdit = ({ history }) => {\r\n  const { userId } = useParams();\r\n  const { user, loading, error, setLoading, setError } = useFetchUserById(\r\n    userId\r\n  );\r\n  if (loading) return <Loading />;\r\n\r\n  const onSubmit = async data => {\r\n    setLoading(true);\r\n    try {\r\n      const { data: user } = await userApi.updateById(userId, data);\r\n      history.push(ROUTES.USERS_LIST.as());\r\n    } catch (e) {\r\n      setError(e);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <Container>\r\n      {error && <Error error={error} />}\r\n      <Row>\r\n        <Col>\r\n          <UserForm user={user} onSubmit={onSubmit} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserEdit);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Loading from \"../../Loading\";\r\nimport UserInfo from \"../UserInfo\";\r\nimport useFetchUserById from \"../hooks/useFetchUserById\";\r\nimport * as ROUTES from \"../../../constants/routes\";\r\nimport Error from \"../../Error\";\r\n\r\nconst UserShow = ({ history }) => {\r\n  const { userId } = useParams();\r\n  const { user, loading, error } = useFetchUserById(userId);\r\n\r\n  if (loading) return <Loading />;\r\n  return (\r\n    <Container>\r\n      {error && <Error error={error} />}\r\n      <Row>\r\n        <Col className=\"text-center\">\r\n          <h2>User information</h2>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {\" \"}\r\n          <Link to={ROUTES.USERS_EDIT.as({ userId })}>\r\n            <Button className=\"btn-focal btn-lg\">Edit</Button>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <UserInfo user={user} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserShow);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport UserList from \"./UserList\";\r\nimport UserCreate from \"./UserCreate\";\r\nimport UserEdit from \"./UserEdit\";\r\nimport UserShow from \"./UserShow\";\r\n\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst UserPage = () => (\r\n  <div>\r\n    <Switch>\r\n      <Route exact path={ROUTES.USERS.href} component={UserList} />\r\n      <Route path={ROUTES.USERS_LIST.href} component={UserList} />\r\n      <Route path={ROUTES.USERS_CREATE.href} component={UserCreate} />\r\n      <Route path={ROUTES.USERS_EDIT.href} component={UserEdit} />\r\n      <Route path={ROUTES.USERS_SHOW.href} component={UserShow} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default UserPage;\r\n","import getById from \"./getById\";\r\nimport getAll from \"./getAll\";\r\nimport deleteById from \"./deleteById\";\r\nimport create from \"./create\";\r\nimport updateById from \"./updateById\";\r\n\r\nexport default { getAll, getById, deleteById, create, updateById };\r\n","import queryString from \"query-string\";\r\nimport api from \"../../../api\";\r\n\r\nexport default function getAll(query) {\r\n  return api.get(\r\n    `/properties${\r\n      query\r\n        ? `?${queryString.stringify(query, { arrayFormat: \"bracket\" })}`\r\n        : \"\"\r\n    }`\r\n  );\r\n}\r\n","import queryString from \"query-string\";\r\nimport api from \"../../../api\";\r\n\r\nexport default function getById(propertyId, query) {\r\n  return api.get(\r\n    `/properties/${propertyId}${\r\n      query\r\n        ? `?${queryString.stringify(query, { arrayFormat: \"bracket\" })}`\r\n        : \"\"\r\n    }`\r\n  );\r\n}\r\n","import api from \"../../../api\";\r\n\r\nexport default function deleteById(propertyId) {\r\n    return api.delete(`/properties/${propertyId}`);\r\n}\r\n","import api from \"../../../api\";\r\n\r\nexport default function create(data) {\r\n  return api.post(`/properties`, data);\r\n}\r\n","import api from \"../../../api\";\r\n\r\nexport default function updateById(propertyId, data) {\r\n  return api.put(`/properties/${propertyId}`, data);\r\n}\r\n","export default function(address) {\r\n  if (address && address.street && address.house_number && address.city)\r\n    return `${address.street} ${address.house_number}, ${address.city} ${\r\n      address.city_district\r\n    } ${address.postcode} ${address.country}`;\r\n  return \"\";\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { withRouter, useParams } from \"react-router-dom\";\r\nimport parseAddressLong from \"../../../common/parsers/parseAddressLong\";\r\n\r\nconst PropertyInfo = ({ property }) => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col className=\"text-center\">\r\n          {Object.keys(property).map(key => {\r\n            if (key === \"address\") {\r\n              return <p>{parseAddressLong(property[key])}</p>;\r\n            } else {\r\n              return (\r\n                property[key] && (\r\n                  <p>\r\n                    {key} : {property[key]}\r\n                  </p>\r\n                )\r\n              );\r\n            }\r\n          })}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(PropertyInfo);\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport PropertyInfo from \"../PropertyInfo\";\r\nimport Loading from \"../../Loading\";\r\nimport propertyApi from \"../../../common/api/properties\";\r\nimport * as ROUTES from \"../../../constants/routes\";\r\nimport Error from \"../../Error\";\r\n\r\nconst PropertyCard = ({ property, update }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  if (loading) return <Loading />;\r\n  const handleDelete = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await propertyApi.deleteById(property.id);\r\n    } catch (e) {\r\n      setError(e);\r\n    }\r\n    setLoading(false);\r\n    update();\r\n  };\r\n  return (\r\n    <Container className=\"border-dark border\">\r\n      {error && <Error error={error} />}\r\n      <PropertyInfo property={property} />\r\n      <Row>\r\n        <Col xs={12} sm={12} lg={4} md={4}>\r\n          <Link to={ROUTES.PROPERTIES_EDIT.as({ propertyId: property.id })}>\r\n            <Button className=\"btn-focal btn-lg\">Edit</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={12} sm={12} lg={4} md={4}>\r\n          <Link to={ROUTES.PROPERTIES_SHOW.as({ propertyId: property.id })}>\r\n            <Button className=\"btn-focal btn-lg\">Show</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={12} sm={12} lg={4} md={4}>\r\n          <Button\r\n            className=\"btn-focal btn-lg\"\r\n            variant=\"danger\"\r\n            onClick={handleDelete}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PropertyCard;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport useFetchProperties from \"../hooks/useFetchProperties\";\r\nimport Loading from \"../../Loading\";\r\nimport * as ROUTES from \"../../../constants/routes\";\r\nimport Error from \"../../Error\";\r\nimport PropertyCard from \"../PropertyCard\";\r\n\r\nconst PropertyList = () => {\r\n  const { properties, loading, error, getProperties } = useFetchProperties();\r\n  if (loading) return <Loading />;\r\n  const update = () => {\r\n    getProperties();\r\n  };\r\n  return (\r\n    <Container>\r\n      {error && <Error error={error} />}\r\n      <Row>\r\n        <Col>\r\n          <Link to={ROUTES.PROPERTIES_CREATE.as()}>\r\n            <Button className=\"btn-focal btn-lg\">Add new</Button>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {properties.map(property => (\r\n            <PropertyCard property={property} update={update} />\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PropertyList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport propertiesApi from \"../../../common/api/properties\";\r\n\r\nexport default function useFetchProperties(query) {\r\n  const [properties, setProperties] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const getProperties = () =>\r\n    propertiesApi\r\n      .getAll(query)\r\n      .then(result => {\r\n        setLoading(false);\r\n        if (result.data) {\r\n          setProperties(result.data);\r\n        } else {\r\n          setProperties([]);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setError(err);\r\n        setLoading(false);\r\n      });\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    getProperties();\r\n  }, []);\r\n  return { properties, loading, error, setLoading, setError, getProperties };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Loading from \"../../Loading/index\";\r\nimport * as _ from \"lodash\";\r\n\r\nconst SelectInput = ({\r\n  optionName,\r\n  onChange,\r\n  name,\r\n  title,\r\n  initialValue = \"\",\r\n  fetch,\r\n  formError,\r\n  initialData = []\r\n}) => {\r\n  const [data, setData] = useState(initialData);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const getData = () =>\r\n    fetch()\r\n      .then(result => {\r\n        setLoading(false);\r\n        if (result.data) {\r\n          setData(result.data);\r\n        } else {\r\n          setData([]);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setError(err);\r\n        setLoading(false);\r\n      });\r\n  useEffect(() => {\r\n    if (fetch) {\r\n      setLoading(true);\r\n      setError(null);\r\n      getData();\r\n    }\r\n  }, []);\r\n\r\n  if (error) return <div>{error.message}</div>;\r\n  if (loading) return <Loading />;\r\n\r\n  const handle = event => {\r\n    const { target } = event;\r\n    const { name, value } = target;\r\n    if (onChange) {\r\n      onChange(name, value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form.Group controlId={name}>\r\n      <Form.Label>{title}</Form.Label>\r\n      <Form.Control\r\n        name={name}\r\n        as=\"select\"\r\n        value={initialValue}\r\n        onChange={handle}\r\n        isInvalid={!!formError}\r\n      >\r\n        <option>Choose...</option>\r\n        {data.map(item => (\r\n          <option key={item.id} value={item.id}>\r\n            {item[optionName]}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n      <Form.Control.Feedback type=\"invalid\">{formError}</Form.Control.Feedback>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { withFormik, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport get from \"lodash/get\";\r\nimport userApi from \"../../../common/api/users\";\r\nimport SelectInput from \"../../Form/SelectInput\";\r\n\r\nconst schema = yup.object({\r\n  ownerId: yup.string().required(),\r\n  livingArea: yup\r\n    .number()\r\n    .positive()\r\n    .nullable(),\r\n  buildingArea: yup\r\n    .number()\r\n    .positive()\r\n    .nullable(),\r\n  yearAltered: yup\r\n    .number()\r\n    .positive()\r\n    .nullable(),\r\n  yearBuilt: yup\r\n    .number()\r\n    .positive()\r\n    .nullable(),\r\n  bathroomsTotal: yup\r\n    .number()\r\n    .positive()\r\n    .nullable(),\r\n  bedroomsTotal: yup\r\n    .number()\r\n    .positive()\r\n    .nullable(),\r\n  address: yup\r\n    .object({\r\n      street: yup.string().required(),\r\n      city: yup.string().required(),\r\n      city_district: yup.string().required(),\r\n      country: yup.string().required(),\r\n      house_number: yup.string().required(),\r\n      postcode: yup.string().required()\r\n    })\r\n    .required()\r\n});\r\n\r\nconst PropertyForm = ({\r\n  handleSubmit,\r\n  handleChange,\r\n  handleBlur,\r\n  values,\r\n  touched,\r\n  isValid,\r\n  errors,\r\n  setFieldValue\r\n}) => {\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"formStreet\">\r\n        <Form.Label>Street</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Street\"\r\n          value={get(values, \"address.street\") || \"\"}\r\n          name=\"address.street\"\r\n          onChange={handleChange}\r\n          isInvalid={!!get(errors, \"address.street\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {get(errors, \"address.street\")}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Row>\r\n        <Col>\r\n          <Form.Group controlId=\"formHouseNumber\">\r\n            <Form.Label>House number</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"House number\"\r\n              value={get(values, \"address.house_number\") || \"\"}\r\n              name=\"address.house_number\"\r\n              onChange={handleChange}\r\n              isInvalid={!!get(errors, \"address.house_number\")}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {get(errors, \"address.house_number\")}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Col>\r\n        <Col>\r\n          <Form.Group controlId=\"formPostcode\">\r\n            <Form.Label>Postcode</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Postcode\"\r\n              value={get(values, \"address.postcode\") || \"\"}\r\n              name=\"address.postcode\"\r\n              onChange={handleChange}\r\n              isInvalid={!!get(errors, \"address.postcode\")}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {get(errors, \"address.postcode\")}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Form.Group controlId=\"formCityDistrict\">\r\n        <Form.Label>City district</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"City district\"\r\n          value={get(values, \"address.city_district\") || \"\"}\r\n          name=\"address.city_district\"\r\n          onChange={handleChange}\r\n          isInvalid={!!get(errors, \"address.city_district\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {get(errors, \"address.city_district\")}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formCity\">\r\n        <Form.Label>City</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"City\"\r\n          value={get(values, \"address.city\") || \"\"}\r\n          name=\"address.city\"\r\n          onChange={handleChange}\r\n          isInvalid={!!get(errors, \"address.city\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {get(errors, \"address.city\")}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formCountry\">\r\n        <Form.Label>Country</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Country\"\r\n          value={get(values, \"address.country\") || \"\"}\r\n          name=\"address.country\"\r\n          onChange={handleChange}\r\n          isInvalid={!!get(errors, \"address.country\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {get(errors, \"address.country\")}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formLivingArea\">\r\n        <Form.Label>Living area</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Living area\"\r\n          value={get(values, \"livingArea\") || \"\"}\r\n          name=\"livingArea\"\r\n          onChange={handleChange}\r\n          isInvalid={!!get(errors, \"livingArea\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {get(errors, \"livingArea\")}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBuildingArea\">\r\n        <Form.Label>Building area</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Building area\"\r\n          value={get(values, \"buildingArea\") || \"\"}\r\n          name=\"buildingArea\"\r\n          onChange={handleChange}\r\n          isInvalid={!!get(errors, \"buildingArea\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {get(errors, \"buildingArea\")}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formYearBuilt\">\r\n        <Form.Label>Year built</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Year built\"\r\n          value={get(values, \"yearBuilt\") || \"\"}\r\n          name=\"yearBuilt\"\r\n          onChange={handleChange}\r\n          isInvalid={!!get(errors, \"yearBuilt\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {get(errors, \"yearBuilt\")}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formYearAltered\">\r\n        <Form.Label>Year altered</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Year altered\"\r\n          value={get(values, \"yearAltered\") || \"\"}\r\n          name=\"yearAltered\"\r\n          onChange={handleChange}\r\n          isInvalid={!!get(errors, \"yearAltered\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {get(errors, \"yearAltered\")}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBathroomsTotal\">\r\n        <Form.Label>Number of bathrooms</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Number of bathrooms\"\r\n          value={get(values, \"bathroomsTotal\") || \"\"}\r\n          name=\"bathroomsTotal\"\r\n          onChange={handleChange}\r\n          isInvalid={!!get(errors, \"bathroomsTotal\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {get(errors, \"bathroomsTotal\")}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBedroomsTotal\">\r\n        <Form.Label>Number of bedrooms</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Number of bedrooms\"\r\n          value={get(values, \"bedroomsTotal\") || \"\"}\r\n          name=\"bedroomsTotal\"\r\n          onChange={handleChange}\r\n          isInvalid={!!get(errors, \"bedroomsTotal\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {get(errors, \"bedroomsTotal\")}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <SelectInput\r\n        optionName={\"email\"}\r\n        fetch={userApi.getAll}\r\n        formError={get(errors, \"ownerId\")}\r\n        name={`ownerId`}\r\n        onChange={setFieldValue}\r\n        initialValue={get(values, `ownerId`) || \"\"}\r\n        title=\"Owner\"\r\n      />\r\n      <Button variant=\"primary\" type=\"submit\" className=\"mt-3 btn-focal btn-lg\">\r\n        Save Changes\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default withFormik({\r\n  enableReinitialize: true,\r\n  mapPropsToValues: values => {\r\n    return values.property || {};\r\n  },\r\n  handleSubmit: (values, { props }) => {\r\n    props.onSubmit(values);\r\n  },\r\n  validationSchema: schema\r\n})(PropertyForm);\r\n","import React, { useState } from \"react\";\r\nimport { withRouter, useParams } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport Loading from \"../../Loading/index\";\r\nimport * as ROUTES from \"../../../constants/routes\";\r\nimport PropertyForm from \"../PropertyForm\";\r\nimport propertyApi from \"../../../common/api/properties\";\r\nimport Error from \"../../Error\";\r\n\r\nconst PropertyCreate = ({ history }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  const onSubmit = async data => {\r\n    setLoading(true);\r\n    try {\r\n      const { data: property } = await propertyApi.create(data);\r\n      history.push(ROUTES.PROPERTIES_LIST.as());\r\n    } catch (e) {\r\n      setError(e);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {error && <Error error={error} />}\r\n      <Row>\r\n        <Col>\r\n          <PropertyForm onSubmit={onSubmit} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(PropertyCreate);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport propertyApi from \"../../../common/api/properties\";\r\n\r\nexport default function useFetchPropertyById(propertyId, query) {\r\n  const [property, setProperty] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const getPropertyById = () =>\r\n    propertyApi\r\n      .getById(propertyId, query)\r\n      .then(result => {\r\n        setLoading(false);\r\n        if (result.data) {\r\n          setProperty(result.data);\r\n        } else {\r\n          setProperty({});\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setError(err);\r\n        setLoading(false);\r\n      });\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    if (propertyId) getPropertyById();\r\n  }, [propertyId]);\r\n  return { property, loading, error, setLoading, setError, getPropertyById };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Alert } from \"react-bootstrap\";\r\nimport { withRouter, useParams } from \"react-router-dom\";\r\nimport Loading from \"../../Loading/index\";\r\nimport * as ROUTES from \"../../../constants/routes\";\r\nimport PropertyForm from \"../PropertyForm\";\r\nimport useFetchPropertyById from \"../hooks/useFetchPropertyById\";\r\nimport propertyApi from \"../../../common/api/properties\";\r\nimport Error from \"../../Error\";\r\n\r\nconst PropertyEdit = ({ history }) => {\r\n  const { propertyId } = useParams();\r\n  const {\r\n    property,\r\n    loading,\r\n    error,\r\n    setLoading,\r\n    setError\r\n  } = useFetchPropertyById(propertyId);\r\n  if (loading) return <Loading />;\r\n\r\n  const onSubmit = async data => {\r\n    setLoading(true);\r\n    try {\r\n      const { data: property } = await propertyApi.updateById(propertyId, data);\r\n      history.push(ROUTES.PROPERTIES_LIST.as());\r\n    } catch (e) {\r\n      setError(e);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {error && <Error error={error} />}\r\n      <Row>\r\n        <Col>\r\n          <PropertyForm property={property} onSubmit={onSubmit} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(PropertyEdit);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Loading from \"../../Loading\";\r\nimport PropertyInfo from \"../PropertyInfo\";\r\nimport useFetchPropertyById from \"../hooks/useFetchPropertyById\";\r\nimport * as ROUTES from \"../../../constants/routes\";\r\nimport Error from \"../../Error\";\r\n\r\nconst PropertyShow = ({ history }) => {\r\n  const { propertyId } = useParams();\r\n  const { property, loading, error } = useFetchPropertyById(propertyId);\r\n\r\n  if (loading) return <Loading />;\r\n  return (\r\n    <Container>\r\n      {error && <Error error={error} />}\r\n      <Row>\r\n        <Col className=\"text-center\">\r\n          <h2>Property information</h2>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {\" \"}\r\n          <Link to={ROUTES.PROPERTIES_EDIT.as({ propertyId })}>\r\n            <Button className=\"btn-focal btn-lg\">Edit</Button>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <PropertyInfo property={property} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(PropertyShow);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport PropertyList from \"./PropertyList\";\r\nimport PropertyCreate from \"./PropertyCreate\";\r\nimport PropertyEdit from \"./PropertyEdit\";\r\nimport PropertyShow from \"./PropertyShow\";\r\n\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst PropertyPage = () => (\r\n  <div>\r\n    <Switch>\r\n      <Route exact path={ROUTES.PROPERTIES.href} component={PropertyList} />\r\n      <Route path={ROUTES.PROPERTIES_LIST.href} component={PropertyList} />\r\n      <Route path={ROUTES.PROPERTIES_CREATE.href} component={PropertyCreate} />\r\n      <Route path={ROUTES.PROPERTIES_EDIT.href} component={PropertyEdit} />\r\n      <Route path={ROUTES.PROPERTIES_SHOW.href} component={PropertyShow} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default PropertyPage;\r\n","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n  <div>\r\n    Page not found\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport Header from \"../Header\";\r\nimport UsersPage from \"../Users\";\r\nimport PropertiesPage from \"../Properties\";\r\n\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nimport NotFoundPage from \"../NotFound\";\r\n\r\nconst App = () => (\r\n  <Router>\r\n    {\" \"}\r\n    <Route component={Header} />\r\n    <Container fluid={true}>\r\n      <Row>\r\n        <Col>\r\n          {\" \"}\r\n          <Switch>\r\n            <Route path={\"/\"} component={UsersPage} exact />\r\n            <Route\r\n              path={ROUTES.USERS.href}\r\n              component={UsersPage}\r\n            />\r\n            <Route\r\n              path={ROUTES.PROPERTIES.href}\r\n              component={PropertiesPage}\r\n            />\r\n            <Route component={NotFoundPage} />\r\n          </Switch>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\n\r\nimport { apiDomainUrl } from \"./api\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}